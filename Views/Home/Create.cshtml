@model StandVirtual.Models.Usuario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h2>Create User</h2>
        </div>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                @TempData["Message"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @if (TempData["MessageError"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                @TempData["MessageError"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    @Html.LabelFor(model => model.Nome, "Name", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Email, "Email", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.CodPostalId, "Postal Code", new { @class = "form-label" })
                    @Html.DropDownListFor(
                        model => model.CodPostalId,
                        ViewBag.CodPostalId as IEnumerable<SelectListItem>,
                        "Select a postal code",
                        new { @class = "form-select" }
                    )
                    @Html.ValidationMessageFor(model => model.CodPostalId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.PermID, "Permission", new { @class = "form-label" })
                    @Html.DropDownListFor(
                        model => model.PermID,
                        ViewBag.PermID as IEnumerable<SelectListItem>,
                        "Select a permission",
                        new { @class = "form-select" }
                    )
                    @Html.ValidationMessageFor(model => model.PermID, "", new { @class = "text-danger" })
                </div>


                <div class="mb-3">
                    @Html.LabelFor(model => model.Password, "Password", new { @class = "form-label" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="d-flex justify-content-between">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Cancel", "Dashboard", "Home", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>

    <div class="mt-3">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary" })
    </div>
</div>
