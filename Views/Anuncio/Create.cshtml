@model StandVirtual.Models.Anuncio

@{
    ViewBag.Title = "Create New Announcement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2>Create New Announcement</h2>
        </div>
        <div class="card-body">
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                    @TempData["Message"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @if (TempData["MessageError"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                    @TempData["MessageError"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <!-- Title -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Titulo, "Title", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter the announcement title" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>

                <!-- Expiration Date -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.DataExpiracao, "Expiration Date", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.DataExpiracao, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(model => model.DataExpiracao, "", new { @class = "text-danger" })
                </div>

                <!-- Price -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Preco, "Price", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter price" } })
                    @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                </div>

                <!-- Description -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Descricao, "Description", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", rows = 4, placeholder = "Enter description" })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>

                <!-- Status Dropdown -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.StatusID, "Status", new { @class = "form-label" })
                    @Html.DropDownList("StatusID", null, "Select status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                </div>

                <!-- User Dropdown -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.UserId, "User", new { @class = "form-label" })
                    @Html.DropDownList("UserId", null, "Select user", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-between">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
