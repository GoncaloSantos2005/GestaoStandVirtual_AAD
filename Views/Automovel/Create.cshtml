@model StandVirtual.Models.Automovel

@{
    ViewBag.Title = "Create Car";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2>Create New Car</h2>
        </div>

        <div class="card-body">
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                    @TempData["Message"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @if (TempData["MessageError"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                    @TempData["MessageError"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <p class="text-danger">* All fields are mandatory.</p>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <!-- Validation Summary -->
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <!-- Form Fields -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.MatriculaAut, "License Plate", new { @class = "form-label" })
                    @Html.EditorFor(model => model.MatriculaAut, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter license plate (XX11XX)" } })
                    @Html.ValidationMessageFor(model => model.MatriculaAut, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Ano, "Year", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter year" } })
                    @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.NumPortas, "Number of Doors", new { @class = "form-label" })
                    @Html.EditorFor(model => model.NumPortas, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter number of doors" } })
                    @Html.ValidationMessageFor(model => model.NumPortas, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Cor, "Color", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Cor, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter color" } })
                    @Html.ValidationMessageFor(model => model.Cor, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Potencia, "Power", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Potencia, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter power (hp)" } })
                    @Html.ValidationMessageFor(model => model.Potencia, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Cilindrada, "Engine Capacity", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Cilindrada, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter engine capacity (cc)" } })
                    @Html.ValidationMessageFor(model => model.Cilindrada, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.TipoCaixa, "Gearbox Type", new { @class = "form-label" })
                    @Html.DropDownListFor(
                        model => model.TipoCaixa,
                        new SelectList(new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Manual", Value = "Manual" },
                            new SelectListItem { Text = "Automatic", Value = "Automatic" }
                        }, "Value", "Text"),
                        "Select gearbox type", // Placeholder text
                        new { @class = "form-control" }
                    )
                    @Html.ValidationMessageFor(model => model.TipoCaixa, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Quilometros, "Mileage", new { @class = "form-label" })
                    @Html.EditorFor(model => model.Quilometros, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter mileage (km)" } })
                    @Html.ValidationMessageFor(model => model.Quilometros, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.TipoAutomovelID, "Car Type", new { @class = "form-label" })
                    @Html.DropDownList("TipoAutomovelID", null, "Select car type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipoAutomovelID, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ModeloID, "Model", new { @class = "form-label" })
                    @Html.DropDownList("ModeloID", null, "Select model", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ModeloID, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.CombustivelID, "Fuel Type", new { @class = "form-label" })
                    @Html.DropDownList("CombustivelID", null, "Select fuel type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CombustivelID, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.AnuncioID, "Ad Title", new { @class = "form-label" })
                    @Html.DropDownList("AnuncioID", null, "Select ad title", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AnuncioID, "", new { @class = "text-danger" })
                </div>

                <!-- Checkbox -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.Importado, "Is Imported?", new { @class = "form-check-label" })
                    <div class="form-check">
                        @Html.EditorFor(model => model.Importado, new { htmlAttributes = new { @class = "form-check-input" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Importado, "", new { @class = "text-danger" })
                </div>
                <br />
                <!-- Submit Button -->
                <div class="d-flex justify-content-between">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
